
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author UTENTE
 */
public class Finestra1 extends javax.swing.JFrame {

    static int variabilestatica = 0;
    static int i = 0;
    static Prodotto[] vet = new Prodotto[100];
    ArrayList<Prodotto> Prodotti = new ArrayList<>();
    boolean canc=false;
    FileOutputStream out = null;

    /**
     * Creates new form Finestra1
     */
    public Finestra1() {
        initComponents();
        Conferma.setEnabled(false);
        Annulla.setVisible(false);
        elimconf.setVisible(false);
        elimconf.setEnabled(false);
        for (int j = 0; j < i; j++) {
            Prodotti.add(vet[j]);
            // System.out.println("realoaded");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JB_Ritorna = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Nome = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Codice = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Quantita = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        Prezzo = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        Categoria = new javax.swing.JComboBox<>();
        SS = new javax.swing.JLabel();
        ss = new javax.swing.JScrollPane();
        Sottoscorta = new javax.swing.JTextArea();
        Conferma = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        Error = new javax.swing.JLabel();
        Elimina = new javax.swing.JButton();
        Annulla = new javax.swing.JButton();
        elimconf = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        JB_Ritorna.setText("Ritorna");
        JB_Ritorna.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JB_RitornaMouseClicked(evt);
            }
        });

        Nome.setColumns(20);
        Nome.setRows(5);
        Nome.setToolTipText("");
        Nome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NomeKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(Nome);

        jLabel1.setText("Inserimento prodotto");

        jLabel2.setText("Nome prodotto");

        jLabel3.setText("Codice");

        Codice.setColumns(20);
        Codice.setRows(5);
        Codice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CodiceKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(Codice);

        jLabel4.setText("Quantita");

        Quantita.setColumns(20);
        Quantita.setRows(5);
        Quantita.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                QuantitaKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(Quantita);

        jLabel5.setText("Prezzo");

        Prezzo.setColumns(20);
        Prezzo.setRows(5);
        Prezzo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PrezzoKeyReleased(evt);
            }
        });
        jScrollPane4.setViewportView(Prezzo);

        jLabel6.setText("Categoria");

        Categoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Alimentari", "Abbigliamento", "Elettronica" }));

        SS.setText("Sottoscorta");

        Sottoscorta.setColumns(20);
        Sottoscorta.setRows(5);
        Sottoscorta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SottoscortaKeyReleased(evt);
            }
        });
        ss.setViewportView(Sottoscorta);

        Conferma.setText("Conferma");
        Conferma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ConfermaMouseClicked(evt);
            }
        });

        Reset.setText("Reset");
        Reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ResetMouseClicked(evt);
            }
        });

        delete.setText("Cancella elenco");
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
        });

        Elimina.setText("Elimina");
        Elimina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                EliminaMouseClicked(evt);
            }
        });

        Annulla.setText("Annulla");
        Annulla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AnnullaMouseClicked(evt);
            }
        });

        elimconf.setText("Conferma");
        elimconf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                elimconfMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SS, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(122, 122, 122)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Categoria, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Conferma)
                                    .addGap(18, 18, 18)
                                    .addComponent(JB_Ritorna))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(Reset)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Elimina)))
                            .addComponent(elimconf)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Error, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Annulla)))
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Error, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(Annulla, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                    .addComponent(elimconf))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Categoria))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Conferma)
                            .addComponent(JB_Ritorna))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(SS, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ss, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Reset)
                            .addComponent(Elimina))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JB_RitornaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JB_RitornaMouseClicked
        Finestraprincipale.finestra1.setVisible(false);
        ProvaFinestre.finestraprincipale.setVisible(true);
        Finestra1.variabilestatica = Finestra1.variabilestatica + 10;
        System.out.println("var " + Finestra1.variabilestatica);

    }//GEN-LAST:event_JB_RitornaMouseClicked

    private void ConfermaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ConfermaMouseClicked

        try {
            int a, b, c, d;
            String str = Nome.getText();

            a = Integer.parseInt(Codice.getText());
            b = Integer.parseInt(Prezzo.getText());
            c = Integer.parseInt(Quantita.getText());
            d = Integer.parseInt(Sottoscorta.getText());
            vet[i] = new Prodotto(a, c, b, d, str, (String) Categoria.getSelectedItem());
            Prodotti.add(vet[i]);

            out = new FileOutputStream("Prodotti");
            ObjectOutputStream s = null;

            try {
                s = new ObjectOutputStream(out);
                s.writeObject(Prodotti);

                s.close();

                out.close();
                System.out.println("ok save");

            } catch (IOException ex) {
                Logger.getLogger(Finestra1.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Finestra1.class.getName()).log(Level.SEVERE, null, ex);
        } 
        Nome.setText("");
        Codice.setText("");
        Prezzo.setText("");
        Sottoscorta.setText("");
        Quantita.setText("");
        i++;

    }//GEN-LAST:event_ConfermaMouseClicked

    private void ResetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ResetMouseClicked
        // TODO add your handling code here:
        Nome.setText("");
        Codice.setText("");
        Prezzo.setText("");
        Sottoscorta.setText("");
        Quantita.setText("");
    }//GEN-LAST:event_ResetMouseClicked

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        try {
            Prodotti.removeAll(Prodotti);
            for (int j = 0; j < i; j++) {
                vet[j].delate();

            }
            out = new FileOutputStream("Prodotti");
            out.close();
            System.out.println("OK delate");
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Finestra1.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Finestra1.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_deleteMouseClicked

    private void NomeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NomeKeyReleased
        char c;
        for (int j = 0; j < Nome.getText().length(); j++) {
            c = Nome.getText().charAt(j);
            if (!(c >= 'a' && c <= 'z') && !(c >= 'A' && c <= 'Z')) {
                Nome.setText(Nome.getText().substring(0, j));
            }
        }
        if (Nome.getText().equals("") || Codice.getText().equals("") || Prezzo.getText().equals("") || Quantita.getText().equals("") || Sottoscorta.getText().equals("")) {
            Conferma.setEnabled(false);
        } else {
            Conferma.setEnabled(true);
        }
    }//GEN-LAST:event_NomeKeyReleased

    private void CodiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CodiceKeyReleased
        // TODO add your handling code here:
        char c;
         boolean test = false;
        for (int j = 0; j < Codice.getText().length(); j++) {
            c = Codice.getText().charAt(j);
            if (!(c >= '0' && c <= '9')) {
                Codice.setText(Codice.getText().substring(0, j));
            }

        }

        //System.out.println(Codice.getText());
        if (!Codice.getText().equals("")) {
            
            if (Integer.parseInt(Codice.getText()) > 9999) {

                Codice.setText(Codice.getText().substring(0, 4));
            }
            for (int j = 0; j < i; j++) {
                if (Integer.parseInt(Codice.getText()) == vet[j].getCodice()) {
                    test = true;
                    if(canc==true && test ==true){
                    Nome.setText(vet[j].getDescrizione());
                        Prezzo.setText(""+vet[j].getPrezzo());
                    Quantita.setText(""+vet[j].getQuantita());
                    Sottoscorta.setText(""+vet[j].getSottoscorta());
                    Categoria.setSelectedItem((String)vet[j].getCategoria());
                    Error.setText("conferma eliminazione");
                        elimconf.setEnabled(true);
                    break;
                    }
                    
                }else if(canc==true && test==false){
                    Error.setText("");
                    Nome.setText("");
                     Prezzo.setText("");
                    Quantita.setText("");
                    Sottoscorta.setText("");
                    Categoria.setSelectedIndex(0);
                     elimconf.setEnabled(!true);
                    }
            }
            if (test == true &&canc!=true) {
                
                Error.setText("Codice gia esistente");
                Conferma.setEnabled(false);
                elimconf.setEnabled(!true);
            } else {
                if(canc!=true){
                Error.setText("");}
               
                Conferma.setEnabled(true);

            }
        }
        if (Nome.getText().equals("") || Codice.getText().equals("") || Prezzo.getText().equals("") || Quantita.getText().equals("") || Sottoscorta.getText().equals("")) {
            Conferma.setEnabled(false);
        } else if(test==true){
            Conferma.setEnabled(!test);
        }
       
    }//GEN-LAST:event_CodiceKeyReleased

    private void QuantitaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_QuantitaKeyReleased
        char c;
        for (int j = 0; j < Quantita.getText().length(); j++) {
            c = Quantita.getText().charAt(j);
            if (!(c >= '0' && c <= '9')) {
                Quantita.setText(Quantita.getText().substring(0, j));
            }
        }
        if (Nome.getText().equals("") || Codice.getText().equals("") || Prezzo.getText().equals("") || Quantita.getText().equals("") || Sottoscorta.getText().equals("")) {
            Conferma.setEnabled(false);
        } else {
            Conferma.setEnabled(true);
        }
    }//GEN-LAST:event_QuantitaKeyReleased

    private void PrezzoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PrezzoKeyReleased
        char c;
        for (int j = 0; j < Prezzo.getText().length(); j++) {
            c = Prezzo.getText().charAt(j);
            if (!(c >= '0' && c <= '9')) {
                Prezzo.setText(Prezzo.getText().substring(0, j));
            }
        }
        if (Nome.getText().equals("") || Codice.getText().equals("") || Prezzo.getText().equals("") || Quantita.getText().equals("") || Sottoscorta.getText().equals("")) {
            Conferma.setEnabled(false);
        } else {
            Conferma.setEnabled(true);
        }
    }//GEN-LAST:event_PrezzoKeyReleased

    private void SottoscortaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SottoscortaKeyReleased
        char c;
        for (int j = 0; j < Sottoscorta.getText().length(); j++) {
            c = Sottoscorta.getText().charAt(j);
            if (!(c >= '0' && c <= '9')) {
                Sottoscorta.setText(Sottoscorta.getText().substring(0, j));
            }
        }
        if (Nome.getText().equals("") || Codice.getText().equals("") || Prezzo.getText().equals("") || Quantita.getText().equals("") || Sottoscorta.getText().equals("")) {
            Conferma.setEnabled(false);
        } else {
            Conferma.setEnabled(true);
        }
    }//GEN-LAST:event_SottoscortaKeyReleased

    private void EliminaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_EliminaMouseClicked
        Annulla.setVisible(true);
        elimconf.setVisible(true);
        jLabel1.setText("Eliminazione prodotto");
        Conferma.setVisible(false);
        delete.setVisible(false);
        JB_Ritorna.setVisible(false);
        Reset.setVisible(false);
        Elimina.setVisible(false);
        Nome.setEditable(false);
        Prezzo.setEditable(false);
        Quantita.setEditable(false);
        Sottoscorta.setEditable(false);
        Categoria.setEnabled(false);
        
        Nome.setText(null);
        Codice.setText(null);
        Prezzo.setText(null);
        Quantita.setText(null);
        Sottoscorta.setText(null);
        canc=true;
    }//GEN-LAST:event_EliminaMouseClicked

    private void AnnullaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AnnullaMouseClicked
        // TODO add your handling code here:
         Annulla.setVisible(!true);
         Error.setText("");
        elimconf.setVisible(!true);
        jLabel1.setText("Inserimento prodotto");
        Conferma.setVisible(!false);
        delete.setVisible(!false);
        JB_Ritorna.setVisible(!false);
        Reset.setVisible(!false);
        Elimina.setVisible(!false);
        Nome.setEditable(!false);
        Prezzo.setEditable(!false);
        Quantita.setEditable(!false);
        Sottoscorta.setEditable(!false);
        Categoria.setEnabled(!false);
        Nome.setText(null);
        Codice.setText(null);
        Prezzo.setText(null);
        Quantita.setText(null);
        Sottoscorta.setText(null);
        canc=false;
    }//GEN-LAST:event_AnnullaMouseClicked

    private void elimconfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_elimconfMouseClicked
        // TODO add your handling code here:
        for(int j=0;j<i;j++){
            if(Nome.getText().equals(vet[j].getDescrizione())){
                Prodotti.remove(vet[j]);
                System.out.println("Prodotto eliminato");
            }
            
        }
        vet=new Prodotto[100];
       
        for(i=0;i<Prodotti.size();i++){
            vet[i]=Prodotti.get(i);
        }
        
            try {
                out = new FileOutputStream("Prodotti");
                ObjectOutputStream s = null;
                s = new ObjectOutputStream(out);
                s.writeObject(Prodotti);

                s.close();

                out.close();
                System.out.println("Elenco aggiornato");

            } catch (IOException ex) {
                Logger.getLogger(Finestra1.class.getName()).log(Level.SEVERE, null, ex);
            }
            Annulla.setVisible(!true);
         Error.setText("");
        elimconf.setVisible(!true);
        jLabel1.setText("Inserimento prodotto");
        Conferma.setVisible(!false);
        delete.setVisible(!false);
        JB_Ritorna.setVisible(!false);
        Reset.setVisible(!false);
        Elimina.setVisible(!false);
        Nome.setEditable(!false);
        Prezzo.setEditable(!false);
        Quantita.setEditable(!false);
        Sottoscorta.setEditable(!false);
        Categoria.setEnabled(!false);
        Nome.setText(null);
        Codice.setText(null);
        Prezzo.setText(null);
        Quantita.setText(null);
        Sottoscorta.setText(null);
        canc=false;
    }//GEN-LAST:event_elimconfMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Finestra1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Finestra1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Finestra1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Finestra1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Finestra1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Annulla;
    private javax.swing.JComboBox<String> Categoria;
    private javax.swing.JTextArea Codice;
    private javax.swing.JButton Conferma;
    private javax.swing.JButton Elimina;
    private javax.swing.JLabel Error;
    private javax.swing.JButton JB_Ritorna;
    private javax.swing.JTextArea Nome;
    private javax.swing.JTextArea Prezzo;
    private javax.swing.JTextArea Quantita;
    private javax.swing.JButton Reset;
    private javax.swing.JLabel SS;
    private javax.swing.JTextArea Sottoscorta;
    private javax.swing.JButton delete;
    private javax.swing.JButton elimconf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane ss;
    // End of variables declaration//GEN-END:variables
}
